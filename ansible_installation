#launch two instances (ubuntu)
1. ansible_masternode
2. ansible_workernode

1. ansibel_masternode
create ssh keypair "ssh-keygen"
copy public key And paste to worker node .ssh/authorized_keys file
Install ansible on master node "sudo apt-add-repository ppa:ansible/ansible"
"sudo apt update"
"sudo apt install ansible"
ansible --version
set up inventory file

#sudo nano /etc/ansible/hosts
private-ip of worker nodes

#edit ansible.cfg
#paste following code on that file
[defaults]
inventory = hosts
host_key_checking = False

2.ansible_workernode
copy public key of ansible_masternode And paste to worker node .ssh/authorized_keys file.

#ping all nodes to test connection
"ansible all -m ping"

#create playbook.yaml file

- hosts: all
  become: yes
  tasks:
    - name: update
      apt: update_cache=yes
    - name: Install Nginx
      apt: name=nginx state=latest
      notify:
        - restart nginx
  handlers:
    - name: restart nginx
      service: name=nginx state=reloaded

#run playbook
ansible-playbook nginx.yaml


                                                                       Ansible Role Commands



1. how to install role and collections

ansible-galaxy role install rolename                   (eg.geerlingguy.apache, 0ta2.git_role,sonarqube etc)
ansible-galaxy collection install communityname        (eg.community.general,ansible.posix)

2.how to create New Role
ansible-galaxy init my_new_role

3.List Installed Roles or Collections

ansible-galaxy role list
ansible-galaxy collection list

4.how to remove role
ansible-galaxy role remove geerlingguy.apache

5.Install from a Requirements File 
create file requirements.yaml using following formats

roles:
  - name: geerlingguy.apache
collections:
  - name: community.general

5.run requiremets file
ansible-galaxy install -r requirements.yaml

6.if you want search any role use following command
ansible-galaxy role search nginx

7.How do I write a playbook using a Galaxy role
create playbook using following format

- name: Set up Apache using Galaxy role
  hosts: webservers
  become: yes
   roles:
    - geerlingguy.apache

8.if you want changes port and some other data use following formats

- name: Set up Apache with custom config
  hosts: webservers
  become: yes
  vars:
    apache_listen_port: 8080
    apache_create_vhosts: true
    apache_vhosts:
      - servername: "example.com"
        documentroot: "/var/www/example"
  roles:
    - geerlingguy.apache


9.execute your playbook using following command
ansible-playbook -i hosts playbookname.yaml


                                                                                  NOTES

üé≠ What Is a Role?
A role is a modular unit of automation. 
It‚Äôs like a recipe that includes tasks, variables, templates, handlers, and more‚Äîall bundled together to perform a specific function

üß∞ What Is a Collection?
A collection is a larger package that can include:
- Multiple roles
- Modules
- Plugins
- Playbooks
- Documentation

### üß± Infrastructure & OS Management

| Collection Name         | Description                                                                 |
|-------------------------|-----------------------------------------------------------------------------|
| `community.general`     | A massive collection of general-purpose roles and modules for Linux, filesystems, users, etc. |
| `ansible.posix`         | Tools for managing POSIX-compliant systems (cron, sysctl, SELinux, etc.)    |
| `ansible.windows`       | Modules and roles for automating Windows systems                            |

---

### ‚òÅÔ∏è Cloud Providers

| Collection Name         | Description                                                                 |
|-------------------------|-----------------------------------------------------------------------------|
| `amazon.aws`            | Manage AWS services like EC2, S3, IAM, RDS, etc.                            |
| `google.cloud`          | Automate Google Cloud Platform resources                                    |
| `azure.azcollection`    | Azure resource management and deployment                                    |

---

### üõ°Ô∏è Network & Security

| Collection Name         | Description                                                                 |
|-------------------------|-----------------------------------------------------------------------------|
| `cisco.ios`             | Manage Cisco IOS devices                                                    |
| `fortinet.fortios`      | Automate FortiGate firewall configuration                                   |
| `junipernetworks.junos` | Modules and roles for Juniper devices                                       |

---

### üß™ Monitoring & DevOps

| Collection Name         | Description                                                                 |
|-------------------------|-----------------------------------------------------------------------------|
| `community.docker`      | Manage Docker containers, images, volumes                                   |
| `sensu.sensu_go`        | Monitor infrastructure using Sensu Go                                       |
| `grafana.grafana`       | Automate dashboards and data sources in Grafana                             |

---

### üß∞ Miscellaneous & Utilities

| Collection Name         | Description                                                                 |
|-------------------------|-----------------------------------------------------------------------------|
| `community.crypto`      | Manage SSL certificates, keys, and PKI infrastructure                       |
| `community.kubernetes`  | Interact with Kubernetes clusters                                           |
| `pureport.pureport`     | Manage Pureport network services                                            |


### üÜö Roles vs Collections

| Feature            | Role                          | Collection                          |
|--------------------|-------------------------------|--------------------------------------|
| Scope              | Single-purpose automation     | Multi-purpose toolkit                |
| Content            | Tasks, templates, vars        | Roles, plugins, modules, playbooks   |
| Distribution       | Via Ansible Galaxy            | Via Galaxy or Automation Hub         |
| Use in Playbooks   | `roles:` section              | Fully Qualified Collection Name (FQCN) |


